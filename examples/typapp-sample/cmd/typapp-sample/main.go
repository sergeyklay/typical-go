package main

// Autogenerated by Typical-Go. DO NOT EDIT.

import (
	"fmt"
	"log"
	"os"
	"syscall"

	"github.com/typical-go/typical-go/pkg/typapp"
	"github.com/typical-go/typical-go/pkg/typgo"

	"github.com/typical-go/typical-go/examples/typapp-sample/internal/app"
	_ "github.com/typical-go/typical-go/examples/typapp-sample/internal/generated/ctor"
)

func main() {
	// NOTE: ProjectName and ProjectVersion passed from descriptor in "tools/typical-build" when gobuild
	fmt.Printf("%s %s\n", typgo.ProjectName, typgo.ProjectVersion)

	application := typapp.Application{
		StartFn:    app.Start,    // What to do when start
		ShutdownFn: app.Shutdown, // What to do when shutdown

		// Exit Signals that trigger to close application
		ExitSigs: []os.Signal{syscall.SIGTERM, syscall.SIGINT},
	}

	if err := application.Run(); err != nil {
		log.Fatal(err)
	}
}
